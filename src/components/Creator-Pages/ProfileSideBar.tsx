import useAuthUser from "@store/authUser";
import flavicon from '@assets/flavicon.svg'
import profile from '@assets/profile.png'
import brandLogo from '@assets/brandLogo.jpg'
import { Link, NavLink, useNavigate, useParams } from "react-router-dom";
import logoutBtn from "@assets/logoutbtn.png"
import useBurgerMenu from "@store/burgerMenu";
import { RxHamburgerMenu } from "react-icons/rx";

const ProfileSideBar = () => {

  const {role, fullName} = useAuthUser(state => state.authUser.userData);
  const logout = useAuthUser(state => state.logout)
  const isOpen = useBurgerMenu(state => state.burgerMenu.isOpen);
  const setBurgerMenu = useBurgerMenu(state => state.setBurgerMenu);
  const {username} = useParams();
  const navigate = useNavigate();

  const handleLogout = () => {
    logout();
    navigate("/signin");
  }

  return (
  <aside className={`w-42 h-screen py-2 px-4 bg-white lg:flex flex-col justify-between fixed z-100 ${isOpen ? 'flex' : 'hidden'}`}>

    <div className="space-y-2">
      <div className="flex gap-5 items-center">
        <RxHamburgerMenu className='lg:hidden' onClick={setBurgerMenu}/>
        <Link to='/' className='text-sm font-medium flex items-center justify-center gap-1'><img src={flavicon} alt="" className='size-4' />Klippify</Link>
      </div>

      <div className='py-4 flex items-center gap-2 border-y-[0.25px] border-[#e1dfdf80]'>
        <img src={role==="creator" ? profile:brandLogo} alt="" className='size-8 border-1 border-[#B5B4B480] rounded-[50%]' />
        <div className="flex flex-col">
          <p className='text-[8px] font-medium text-[#33333380]'>{role==="creator" ? "DIGITAL CREATOR":"BRAND"}</p>
          <Link to={`/${username}/profile`} className='text-xxs font-medium'>{fullName?.split(" ").map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(" ")}</Link>
        </div>
      </div>

      <nav className='flex flex-col'>

        <NavLink to='dashboard' className={({isActive}) => `p-3 text-xxs text-[#33333380] font-medium flex gap-2 items-center rounded-lg ${isActive && 'bg-gradient-to-r from-[#333EFF] to-[#5BCAFF] text-white'}`}>
          {({isActive}) => (
            <>
            <DashBoardIcon color={isActive ? "white" : "#33333380"}/>Dashboard
            </>
          )}
        </NavLink>

        <NavLink to='campaigns' className={({isActive}) => `p-3 text-xxs text-[#33333380] font-medium flex gap-2 items-center rounded-lg ${isActive && 'bg-gradient-to-r from-[#333EFF] to-[#5BCAFF] text-white'}`}>
          {({isActive}) => (
            <>
            <CampaignsIcon color={isActive ? "white" : "#33333380"}/>Campaigns
            </>
          )}
        </NavLink>

        {role==='brand' &&
          <NavLink to='payments' className={({isActive}) => `p-3 text-xxs text-[#33333380] font-medium flex gap-2 items-center rounded-lg ${isActive && 'bg-gradient-to-r from-[#333EFF] to-[#5BCAFF] text-white'}`}>
            {({isActive}) => (
              <>
              <WalletIcon color={isActive ? "white" : "#33333380"}/>Payments
              </>
            )}
          </NavLink>
        }

      </nav>
    </div>

    <div className="flex justify-center mb-5">
      <button className="text-xxs text-[#2422208F] font-medium flex gap-3 cursor-pointer" onClick={handleLogout}><img src={logoutBtn} alt="" className="size-4"/>Logout</button>
    </div>

    </aside>
  )
}

export default ProfileSideBar;



type IconProps = {
  color: string;
}

const DashBoardIcon: React.FC<IconProps> = ({color}) => {
  return (
    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M6.57129 2.75C7.31425 2.75 7.83235 2.75039 8.2373 2.7793C8.53566 2.80061 8.74055 2.83609 8.89844 2.88477L9.04297 2.9375C9.49809 3.13612 9.8727 3.47913 10.1113 3.91016L10.2051 4.10059C10.2818 4.27661 10.3349 4.50764 10.3633 4.90527C10.3922 5.31025 10.3926 5.82822 10.3926 6.57129C10.3926 7.31426 10.3922 7.83235 10.3633 8.2373C10.342 8.53571 10.3065 8.74054 10.2578 8.89844L10.2051 9.04297C10.0064 9.49812 9.66352 9.87273 9.23242 10.1113L9.04297 10.2051C8.86691 10.2819 8.63514 10.3349 8.2373 10.3633C7.83235 10.3922 7.31426 10.3926 6.57129 10.3926C5.82822 10.3926 5.31025 10.3922 4.90527 10.3633C4.6067 10.3419 4.40207 10.3065 4.24414 10.2578L4.10059 10.2051C3.64525 10.0064 3.2699 9.66367 3.03125 9.23242L2.9375 9.04297C2.86069 8.86691 2.80772 8.63514 2.7793 8.2373C2.75039 7.83235 2.75 7.31425 2.75 6.57129C2.75 5.82823 2.75037 5.31025 2.7793 4.90527C2.80062 4.60675 2.83605 4.40206 2.88477 4.24414L2.9375 4.10059C3.13613 3.64533 3.479 3.26991 3.91016 3.03125L4.10059 2.9375C4.2766 2.86077 4.50772 2.8077 4.90527 2.7793C5.31025 2.75037 5.82823 2.75 6.57129 2.75Z" stroke={color} strokeWidth="1.5"/>
      <path d="M6.57129 13.6072C7.31425 13.6072 7.83235 13.6076 8.2373 13.6365C8.53566 13.6578 8.74055 13.6933 8.89844 13.7419L9.04297 13.7947C9.49809 13.9933 9.8727 14.3363 10.1113 14.7673L10.2051 14.9578C10.2818 15.1338 10.3349 15.3648 10.3633 15.7625C10.3922 16.1674 10.3926 16.6854 10.3926 17.4285C10.3926 18.1714 10.3922 18.6895 10.3633 19.0945C10.342 19.3929 10.3065 19.5977 10.2578 19.7556L10.2051 19.9001C10.0064 20.3553 9.66352 20.7299 9.23242 20.9685L9.04297 21.0623C8.86691 21.1391 8.63514 21.192 8.2373 21.2205C7.83235 21.2494 7.31426 21.2498 6.57129 21.2498C5.82822 21.2498 5.31025 21.2494 4.90527 21.2205C4.6067 21.1991 4.40207 21.1637 4.24414 21.115L4.10059 21.0623C3.64525 20.8636 3.2699 20.5209 3.03125 20.0896L2.9375 19.9001C2.86069 19.7241 2.80772 19.4923 2.7793 19.0945C2.75039 18.6895 2.75 18.1714 2.75 17.4285C2.75 16.6854 2.75037 16.1674 2.7793 15.7625C2.80062 15.4639 2.83605 15.2592 2.88477 15.1013L2.9375 14.9578C3.13613 14.5025 3.479 14.1271 3.91016 13.8884L4.10059 13.7947C4.2766 13.718 4.50772 13.6649 4.90527 13.6365C5.31025 13.6076 5.82823 13.6072 6.57129 13.6072Z" stroke={color} strokeWidth="1.5"/>
      <path d="M17.4285 2.75C18.1714 2.75 18.6895 2.75039 19.0945 2.7793C19.3928 2.80061 19.5977 2.83609 19.7556 2.88477L19.9001 2.9375C20.3553 3.13612 20.7299 3.47913 20.9685 3.91016L21.0623 4.10059C21.139 4.27661 21.1921 4.50764 21.2205 4.90527C21.2494 5.31025 21.2498 5.82822 21.2498 6.57129C21.2498 7.31426 21.2494 7.83235 21.2205 8.2373C21.1991 8.53571 21.1637 8.74054 21.115 8.89844L21.0623 9.04297C20.8636 9.49812 20.5207 9.87273 20.0896 10.1113L19.9001 10.2051C19.7241 10.2819 19.4923 10.3349 19.0945 10.3633C18.6895 10.3922 18.1714 10.3926 17.4285 10.3926C16.6854 10.3926 16.1674 10.3922 15.7625 10.3633C15.4639 10.3419 15.2592 10.3065 15.1013 10.2578L14.9578 10.2051C14.5024 10.0064 14.1271 9.66367 13.8884 9.23242L13.7947 9.04297C13.7179 8.86691 13.6649 8.63514 13.6365 8.2373C13.6076 7.83235 13.6072 7.31425 13.6072 6.57129C13.6072 5.82823 13.6076 5.31025 13.6365 4.90527C13.6578 4.60675 13.6932 4.40206 13.7419 4.24414L13.7947 4.10059C13.9933 3.64533 14.3362 3.26991 14.7673 3.03125L14.9578 2.9375C15.1338 2.86077 15.3649 2.8077 15.7625 2.7793C16.1674 2.75037 16.6854 2.75 17.4285 2.75Z" stroke={color} strokeWidth="1.5"/>
      <path d="M17.4285 13.6072C18.1714 13.6072 18.6895 13.6076 19.0945 13.6365C19.3928 13.6578 19.5977 13.6933 19.7556 13.7419L19.9001 13.7947C20.3553 13.9933 20.7299 14.3363 20.9685 14.7673L21.0623 14.9578C21.139 15.1338 21.1921 15.3648 21.2205 15.7625C21.2494 16.1674 21.2498 16.6854 21.2498 17.4285C21.2498 18.1714 21.2494 18.6895 21.2205 19.0945C21.1991 19.3929 21.1637 19.5977 21.115 19.7556L21.0623 19.9001C20.8636 20.3553 20.5207 20.7299 20.0896 20.9685L19.9001 21.0623C19.7241 21.1391 19.4923 21.192 19.0945 21.2205C18.6895 21.2494 18.1714 21.2498 17.4285 21.2498C16.6854 21.2498 16.1674 21.2494 15.7625 21.2205C15.4639 21.1991 15.2592 21.1637 15.1013 21.115L14.9578 21.0623C14.5024 20.8636 14.1271 20.5209 13.8884 20.0896L13.7947 19.9001C13.7179 19.7241 13.6649 19.4923 13.6365 19.0945C13.6076 18.6895 13.6072 18.1714 13.6072 17.4285C13.6072 16.6854 13.6076 16.1674 13.6365 15.7625C13.6578 15.4639 13.6932 15.2592 13.7419 15.1013L13.7947 14.9578C13.9933 14.5025 14.3362 14.1271 14.7673 13.8884L14.9578 13.7947C15.1338 13.718 15.3649 13.6649 15.7625 13.6365C16.1674 13.6076 16.6854 13.6072 17.4285 13.6072Z" stroke={color} strokeWidth="1.5"/>
    </svg>
  )
}

const CampaignsIcon: React.FC<IconProps> = ({color}) => {
  return (
    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M21 15.7201V4.28007C21.0045 4.12587 20.9733 3.97272 20.9088 3.83259C20.8443 3.69246 20.7483 3.56916 20.6282 3.47232C20.5081 3.37548 20.3672 3.30774 20.2166 3.27438C20.066 3.24103 19.9097 3.24298 19.76 3.28007L9 6.00007V14.0001L19.76 16.6901C19.9072 16.7265 20.0608 16.7289 20.2092 16.6972C20.3575 16.6654 20.4967 16.6004 20.6161 16.5069C20.7356 16.4135 20.8323 16.2941 20.8988 16.1577C20.9653 16.0214 20.9999 15.8717 21 15.7201Z" stroke={color} strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
      <path d="M8.99991 14V20C8.99991 20.2652 8.89456 20.5196 8.70702 20.7071C8.51948 20.8946 8.26513 21 7.99991 21H6.81991C6.58597 21.0047 6.35777 20.9272 6.17505 20.7811C5.99234 20.6349 5.86666 20.4293 5.81991 20.2L4.40991 13" stroke={color} strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
      <path d="M9 6H7C5.93913 6 4.92172 6.42143 4.17157 7.17157C3.42143 7.92172 3 8.93913 3 10C3 11.0609 3.42143 12.0783 4.17157 12.8284C4.92172 13.5786 5.93913 14 7 14H9V6Z" stroke={color} strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
    </svg>
  )
}

const WalletIcon: React.FC<IconProps> = ({color}) => {
  return (
    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path fillRule="evenodd" clipRule="evenodd" d="M20.924 11.7502H18.23C16.806 11.7502 15.749 12.8092 15.749 14.0002C15.749 15.1912 16.806 16.2502 18.229 16.2502H20.947C21.153 16.2372 21.242 16.0982 21.249 16.0142V11.9862C21.242 11.9022 21.153 11.7632 20.947 11.7512L20.924 11.7502ZM20.85 10.2502C20.9167 10.2495 20.98 10.2508 21.04 10.2542C21.91 10.3072 22.681 10.9642 22.746 11.8822C22.75 11.9422 22.75 12.0072 22.75 12.0672V15.9332C22.75 15.9932 22.75 16.0582 22.746 16.1182C22.681 17.0362 21.91 17.6932 21.039 17.7472C20.9797 17.7498 20.9163 17.7508 20.849 17.7502H18.231C16.086 17.7502 14.25 16.1222 14.25 14.0002C14.25 11.8782 16.086 10.2502 18.23 10.2502H20.85Z" fill={color}/>
      <path d="M19 14C19 14.2652 18.8946 14.5196 18.7071 14.7071C18.5196 14.8946 18.2652 15 18 15C17.7348 15 17.4804 14.8946 17.2929 14.7071C17.1054 14.5196 17 14.2652 17 14C17 13.7348 17.1054 13.4804 17.2929 13.2929C17.4804 13.1054 17.7348 13 18 13C18.2652 13 18.5196 13.1054 18.7071 13.2929C18.8946 13.4804 19 13.7348 19 14Z" fill={color}/>
      <path fillRule="evenodd" clipRule="evenodd" d="M20.85 10.25C20.9167 10.2494 20.98 10.2507 21.04 10.254C21.265 10.267 21.483 10.321 21.685 10.41C21.578 8.80402 21.283 7.56603 20.359 6.64103C19.61 5.89302 18.661 5.56103 17.489 5.40303L17.447 5.39803L17.415 5.37503L13.679 2.89803C13.0308 2.47547 12.2738 2.25049 11.5 2.25049C10.7262 2.25049 9.96918 2.47547 9.321 2.89803L5.586 5.37503L5.553 5.39803L5.511 5.40303C4.339 5.56103 3.39 5.89302 2.641 6.64103C1.893 7.39003 1.561 8.33903 1.403 9.51102C1.25 10.651 1.25 12.106 1.25 13.944V14.056C1.25 15.894 1.25 17.35 1.403 18.489C1.561 19.661 1.893 20.61 2.641 21.359C3.39 22.107 4.339 22.439 5.511 22.597C6.651 22.75 8.106 22.75 9.944 22.75H13.056C14.894 22.75 16.35 22.75 17.489 22.597C18.661 22.439 19.61 22.107 20.359 21.359C21.283 20.434 21.578 19.196 21.685 17.589C21.4817 17.6797 21.2663 17.7324 21.039 17.747C20.9797 17.7497 20.9163 17.7507 20.849 17.75H20.168C20.054 19.092 19.797 19.8 19.298 20.298C18.875 20.721 18.295 20.975 17.289 21.11C16.262 21.248 14.907 21.25 13 21.25H10C8.093 21.25 6.739 21.248 5.71 21.11C4.705 20.975 4.125 20.721 3.702 20.298C3.279 19.875 3.025 19.295 2.89 18.289C2.752 17.262 2.75 15.907 2.75 14C2.75 12.093 2.752 10.739 2.89 9.71003C3.025 8.70503 3.279 8.12503 3.702 7.70203C4.125 7.27903 4.705 7.02503 5.711 6.89003C6.739 6.75203 8.093 6.75003 10 6.75003H13C14.907 6.75003 16.262 6.75203 17.29 6.89003C18.295 7.02503 18.875 7.27903 19.298 7.70203C19.797 8.20003 20.054 8.90903 20.168 10.25H20.85ZM9.944 5.25003H13.056C13.5727 5.25003 14.0593 5.25102 14.516 5.25303L12.85 4.14803C12.05 3.61803 10.95 3.61803 10.15 4.14803L8.483 5.25303C8.94033 5.25036 9.427 5.24936 9.943 5.25003" fill={color}/>
      <path d="M6 9.25C5.80109 9.25 5.61032 9.32902 5.46967 9.46967C5.32902 9.61032 5.25 9.80109 5.25 10C5.25 10.1989 5.32902 10.3897 5.46967 10.5303C5.61032 10.671 5.80109 10.75 6 10.75H10C10.1989 10.75 10.3897 10.671 10.5303 10.5303C10.671 10.3897 10.75 10.1989 10.75 10C10.75 9.80109 10.671 9.61032 10.5303 9.46967C10.3897 9.32902 10.1989 9.25 10 9.25H6Z" fill={color}/>
    </svg>
  )
}